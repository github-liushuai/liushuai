实现高可用架构的主要手段是 数据和服务的冗余备份和失效转移
典型的网站设计通常分为三层：应用层、服务层、数据层
位于应用层的服务器通常为了应对高并发的访问请求，会通过负载均衡设备将服务器组成一个集群共同对外提供服务，同时负载均衡设备会通过心跳检测等手段来检测后端应用服务器是否可用，检测到某台应用服务器不可用时就将其剔出集群列表，并将请求分发到其他服务器
位于服务层到服务器情况跟应用层类似，也是通过集群方式实现高可用，只是这些服务器被应用层通过分布式服务调用框架访问
位于数据层到服务器需要在数据写入时进行数据同步复制，写入多台服务器，实现冗余备份

1）高可用的应用
通过负载均衡进行无状态服务的失效转移
应用服务器集群的session管理
  session复制：在集群的服务器之间同步session对象，但这种方式不适用于大型网站
  session绑定：同一ip请求总会分发到同一台服务器上，不符合高可用需求，所以很少采用
  使用cookie记录session
  session服务器：利用独立部署的session服务器（集群）统一管理session，应用服务器每次读写session时，都访问session服务器
    
2）高可用的服务
可以使用类似负载均衡的失效转移策略实现高可用的服务，除此之外还有以下几点高可用的服务策略
  分级管理：核心服务部署在更好的硬件设备上，同时服务部署上也要进行必要的隔离，避免故障的连锁反应
  超时设置：服务器宕机、线程死锁等原因可能造成服务端失去响应，应用程序因为得不到响应而一直等待，占用资源切不利于转移访问，所以要设置超时时间
  异步调用：但是要注意不是所有服务都适合使用异步调用
  服务降级：降级有两种手段 拒绝服务及关闭服务，拒绝低优先级的调用或随机拒绝访问，或关闭部分不重要的服务
  幂等性设计
  
