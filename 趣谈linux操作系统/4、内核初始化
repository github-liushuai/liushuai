启动从入口函数start_kernel() 开始，相当于内核的 main 函数，主要进行以下初始化操作
  init_task
    初始化0号进程
  trap_init
    中断初始化
  mm_init
    内存管理初始化
  sched_init
    初始化调度模块
  vfs_caches_init
    初始化虚拟文件系统
  rest_init
    初始化1号进程：用户态进程总管
      初始化1号进程时要先用到ramdisk，这是个内存上的文件系统，运行完ramdisk上面的/init后就已经在用户态了，接下来就可以加载硬盘上的驱动访问真正的文件系统了
    初始化2号进程：负责所有内核态的线程的调度和管理，是内核态所有线程运行的祖先
    
用户态代码如何访问核心资源？
  用户态 - 系统调用 - 保存寄存器 - 内核态执行系统调用 - 恢复寄存器 - 返回用户态，然后接着运行
