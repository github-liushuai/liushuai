kubeadm：一键部署k8s集群工具，将k8s各组件部署在容器中（kubelet除外）
  
为何kubelet不能容器化？
答：kubelet除了跟容器运行时打交道之外，在配置容器网络、管理容器数据卷时，都需要直接操作宿主机

kubeadm使用简介：
1、在机器上手动安装 kubeadm、kubelet 和 kubectl这三个二进制文件
2、使用“kubeadm init”部署 Master 节点
  这个操作主要做了以下几件事
    1）Preflight Check，系列的检查工作，以确定这台机器可以用来部署 Kubernetes
      Linux 内核的版本必须是否是 3.10 以上？
      Linux Cgroups 模块是否可用？
      机器的 hostname 是否标准？
      用户安装的 kubeadm 和 kubelet 的版本是否匹配？
      机器上是不是已经安装了 Kubernetes 的二进制文件？
      Kubernetes 的工作端口 10250/10251/10252 端口是不是已经被占用？
      ip、mount 等 Linux 指令是否存在？
      Docker 是否已经安装？
      ...
    2）生成 Kubernetes 对外提供服务所需的各种证书和对应的目录
      Kubernetes 对外提供服务时，除非专门开启“不安全模式”，否则都要通过 HTTPS 才能访问 kube-apiserver
    3）为其他组件生成访问 kube-apiserver 所需的配置文件
      这些文件里面记录的是，当前这个 Master 节点的服务器地址、监听端口、证书目录等信息。这样，对应的客户端（比如 scheduler，kubelet 等），可以直接加载相应的文件，使用里面的信息与 kube-apiserver 建立安全连接
    4）为 Master 组件生成 Pod 配置文件
       kube-apiserver、kube-controller-manager、kube-scheduler、Etcd 都会被使用 Pod 的方式部署起来，但这时Kubernetes 集群尚不存在
       在 Kubernetes 中，有一种特殊的容器启动方法叫做“Static Pod，当这台机器上的 kubelet 启动时，它会自动检查这个目录，加载所有的 Pod YAML 文件，然后在这台机器上启动它们
    5）为集群生成一个 bootstrap token
      在后面，只要持有这个token，任何一个安装了 kubelet 和 kubadm 的节点，都可以通过 kubeadm join 加入到这个集群当中
      在 token 生成之后，kubeadm 会将 ca.crt 等 Master 节点的重要信息，通过ConfigMap 的方式保存在 Etcd 当中，供后续部署 Node 节点使用
    6）安装默认插件
      Kubernetes 默认 kube-proxy 和 DNS这两个插件是必须安装的。它们分别用来提供整个集群的服务发现和 DNS 功能
      其实，这两个插件也只是两个容器镜像而已，所以 kubeadm 只要用 Kubernetes 客户端创建两个Pod 就可以了
3、使用“kubeadm join”添加Node节点
    1）拿到保存在 ConfigMap 中的 cluster-info（它保存了 APIServer 的授权信息）
    2）有了 cluster-info 里的 kube-apiserver 的地址、端口、证书，kubelet 就可以以“安全模式”连接到 apiserver 上，这样就可以进行添加节点的操作了

配置kubeadm的部署参数：kubeadm init --config kubeadm.yaml 可以给 kubeadm 提供一个 YAML 文件，通过制定这样一个部署参数配置文件，就可以很方便地在这个文件里填写各种自定义的部署参数了

