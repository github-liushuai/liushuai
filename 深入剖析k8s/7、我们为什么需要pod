首先，关于 Pod 最重要的一个事实是：它只是一个逻辑概念，Kubernetes 真正处理的，还是宿主机操作系统上 Linux 容器的 Namespace和 Cgroups，而并不存在一个所谓的 Pod 的边界或者隔离环境
那么，Pod 又是怎么被“创建”出来的呢？
答案是：Pod，其实是一组共享了某些资源的容器，具体的说：Pod 里的所有容器，共享的是同一个 Network Namespace，并且可以声明共享同一个 Volume

1、可以解决成组调度的问题
2、对于具有“超亲密关系”的容器，可以将他们放在一个pod里面，也许你会说docker容器本身具有这样共享namespace和volume的功能，但是这样肯定存在依赖关系
而pod是先创建pause容器来“Hold 住”Network Namespace 后，用户的应用容器再加入到其中来，Pod 的生命周期只跟 pause 容器一致，而与应用容器无关
对于同一个 Pod 里面的所有用户容器来说，它们的进出流量，也可以认为都是通过 pause容器完成的，这同时也意味着如果你想开发一个网络插件，你完全不必关心用户容器的启动与否，只需要关注如何配置 Pod，也就是 pause 容器的 Network Namespace 即可
另一个可以
